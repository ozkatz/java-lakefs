/*
 * lakeFS API
 * lakeFS HTTP API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.TimePeriod;

/**
 * RetentionPolicyRuleExpiration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-09T13:58:34.593755+02:00[Asia/Jerusalem]")
public class RetentionPolicyRuleExpiration {
  public static final String SERIALIZED_NAME_ALL = "all";
  @SerializedName(SERIALIZED_NAME_ALL)
  private TimePeriod all;

  public static final String SERIALIZED_NAME_UNCOMMITTED = "uncommitted";
  @SerializedName(SERIALIZED_NAME_UNCOMMITTED)
  private TimePeriod uncommitted;

  public static final String SERIALIZED_NAME_NONCURRENT = "noncurrent";
  @SerializedName(SERIALIZED_NAME_NONCURRENT)
  private TimePeriod noncurrent;


  public RetentionPolicyRuleExpiration all(TimePeriod all) {
    
    this.all = all;
    return this;
  }

   /**
   * Get all
   * @return all
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TimePeriod getAll() {
    return all;
  }


  public void setAll(TimePeriod all) {
    this.all = all;
  }


  public RetentionPolicyRuleExpiration uncommitted(TimePeriod uncommitted) {
    
    this.uncommitted = uncommitted;
    return this;
  }

   /**
   * Get uncommitted
   * @return uncommitted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TimePeriod getUncommitted() {
    return uncommitted;
  }


  public void setUncommitted(TimePeriod uncommitted) {
    this.uncommitted = uncommitted;
  }


  public RetentionPolicyRuleExpiration noncurrent(TimePeriod noncurrent) {
    
    this.noncurrent = noncurrent;
    return this;
  }

   /**
   * Get noncurrent
   * @return noncurrent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TimePeriod getNoncurrent() {
    return noncurrent;
  }


  public void setNoncurrent(TimePeriod noncurrent) {
    this.noncurrent = noncurrent;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetentionPolicyRuleExpiration retentionPolicyRuleExpiration = (RetentionPolicyRuleExpiration) o;
    return Objects.equals(this.all, retentionPolicyRuleExpiration.all) &&
        Objects.equals(this.uncommitted, retentionPolicyRuleExpiration.uncommitted) &&
        Objects.equals(this.noncurrent, retentionPolicyRuleExpiration.noncurrent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(all, uncommitted, noncurrent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetentionPolicyRuleExpiration {\n");
    sb.append("    all: ").append(toIndentedString(all)).append("\n");
    sb.append("    uncommitted: ").append(toIndentedString(uncommitted)).append("\n");
    sb.append("    noncurrent: ").append(toIndentedString(noncurrent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

